
# Compile with nearest neighbor search using the ANN library (Y/N)
ANN_SEARCH = N

# Tree data type used by ANN (SCC_ANN_KDTREE/SCC_ANN_BDTREE)
ANN_TREE = SCC_ANN_KDTREE


# Set up

CXXFLAGS = -std=c++11 -O2 -pedantic -Wall -Wextra -Wconversion -Wfloat-equal -Werror

# Build objects

$(BUILDDIR)/dist_nnsearch_ANN.o: src/dist_nnsearch_ANN.cpp
	$(CXX) -c $(CXXFLAGS) $(XTRA_FLAGS) $< -o $@


ifeq ($(ANN_SEARCH), Y)
OBJECTS := $(filter-out $(BUILDDIR)/dist_nnsearch_c.o,$(OBJECTS)) $(BUILDDIR)/dist_nnsearch_ANN.o
XTRA_OBJECTS += $(addprefix exlib/libANN/build/,ANN.o brute.o kd_tree.o kd_util.o kd_split.o kd_dump.o \
                                                kd_search.o kd_pr_search.o kd_fix_rad_search.o bd_tree.o \
                                                bd_search.o bd_pr_search.o bd_fix_rad_search.o perf.o)
endif

ifneq ($(ANN_TREE), SCC_ANN_KDTREE)
XTRA_FLAGS += -D$(ANN_TREE)
endif
